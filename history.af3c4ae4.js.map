{"mappings":"AAGAA,SAASC,iBAAiB,oBAAoB,WAC5CC,MCJc,gCDIE,YAAuCC,OAA3BC,aAAaC,QAAQ,MAAM,UAAS,CAC9DC,OAAQ,QAEPC,MAAK,SAAAC,G,OAAYA,EAASC,M,IAC1BF,MAAK,SAAAG,G,OAGV,SAAyBC,GAKvB,IAHA,IAAMC,EAAmBZ,SAASa,eAAe,oBAC3CC,EAAgBd,SAASe,yBAEtBC,EAAI,EAAGA,EAAIL,EAAKM,MAAMC,OAAQF,IAAK,CAE1C,IAAMG,EAAYnB,SAASoB,cAAc,MACzCD,EAAUE,UAAY,IAAUlB,OAANa,EAAI,GAG9B,IAAMM,EAAWtB,SAASoB,cAAc,MAMlCG,EAAYvB,SAASoB,cAAc,MACnCI,EAAWb,EAAKM,MAAMD,GAAGS,KAC/BF,EAAUF,UAAYG,EACtBV,EAAcY,YAAYP,GAE1B,IAAMQ,EAAgBhB,EAAKM,MAAMD,GAAGY,WACpCL,EAAUF,UAAYM,EACtBb,EAAcY,YAAYC,GAE1B,IAAME,EAAclB,EAAKM,MAAMD,GAAGc,SAClCP,EAAUF,UAAYQ,EACtBf,EAAcY,YAAYG,GAE1B,IAAME,EAAqBpB,EAAKM,MAAMD,GAAGgB,eACzCT,EAAUF,UAAYU,EACtBjB,EAAcY,YAAYK,GAE1B,IAAME,EAAoBtB,EAAKM,MAAMD,GAAGkB,cACxCX,EAAUF,UAAYY,EACtBnB,EAAcY,YAAYO,GAG1BrB,EAAiBc,YAAYJ,GAAUI,YAAYZ,E,EA1CrCqB,CAAgBzB,E","sources":["src/js/components/exam-history.js","src/js/index.js"],"sourcesContent":["import { baseURL } from '../index';\n\n//   Create html elements after the DOM content has loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n  fetch(baseURL + `/teacher/${localStorage.getItem('Id')}/exams`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .then(body => populateHistory(body));\n});\n\nfunction populateHistory(data) {\n  // Find the table where to put the information in\n  const historyTableBody = document.getElementById('historyTableBody');\n  const tableBodyFrag = document.createDocumentFragment();\n\n  for (let i = 0; i < data.exams.length; i++) {\n    // Number the row as a table head\n    const tableHead = document.createElement('th');\n    tableHead.innerText = `#${i + 1}`;\n\n    // Create new row\n    const tableRow = document.createElement('tr');\n\n    // Get the relevant information for the history table\n    // const examId = data.exams[i].id; TODO\n\n    // Create element for table data\n    const tableData = document.createElement('td');\n    const examName = data.exams[i].name;\n    tableData.innerText = examName;\n    tableBodyFrag.appendChild(tableHead);\n\n    const examStartTime = data.exams[i].start_time;\n    tableData.innerText = examStartTime;\n    tableBodyFrag.appendChild(examStartTime);\n\n    const examEndTime = data.exams[i].end_time;\n    tableData.innerText = examEndTime;\n    tableBodyFrag.appendChild(examEndTime);\n\n    const examsStartingGrade = data.exams[i].starting_grade;\n    tableData.innerText = examsStartingGrade;\n    tableBodyFrag.appendChild(examsStartingGrade);\n\n    const examsMaximumGrade = data.exams[i].maximum_grade;\n    tableData.innerText = examsMaximumGrade;\n    tableBodyFrag.appendChild(examsMaximumGrade);\n\n    // Add new row and the relevant information inside of it\n    historyTableBody.appendChild(tableRow).appendChild(tableBodyFrag);\n  }\n}\n","const baseURL = 'http://16.16.137.163:5000/api';\n\nexport { baseURL };\n"],"names":["document","addEventListener","fetch","concat","localStorage","getItem","method","then","response","json","body","data","historyTableBody","getElementById","tableBodyFrag","createDocumentFragment","i","exams","length","tableHead","createElement","innerText","tableRow","tableData","examName","name","appendChild","examStartTime","start_time","examEndTime","end_time","examsStartingGrade","starting_grade","examsMaximumGrade","maximum_grade","$87937cf3aa9d49ce$var$populateHistory"],"version":3,"file":"history.af3c4ae4.js.map"}